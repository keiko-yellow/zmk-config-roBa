#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        ctrl {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <18 19>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <20 19>;
        };

        layer6 {
            bindings = <&to 3>;
            key-positions = <0 1>;
        };

        capslock {
            bindings = <&caps_word>;
            key-positions = <6 7>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <30 31>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt_to_layer_0 3 Q        &kp L                &kp U         &kp COMMA  &kp DOT                                             &kp F                   &kp W  &kp R  &kp Y        &kp P
&mt LSHIFT E              &mt LCTRL I          &kp A         &kp O      &kp MINUS    &kp LANGUAGE_1          &kp F7         &kp K                   &kp T  &kp N  &mt RCTRL S  &mt RIGHT_SHIFT H
&lt_to_layer_0 4 Z        &kp X                &kp C         &kp V      &kp B        &kp LANGUAGE_2          &kp F10        &kp G                   &kp D  &kp M  &kp J        &kp B
&lt_to_layer_0 5 LC(ESC)  &mt LGUI LEFT_SHIFT  &kp LEFT_ALT  &lt 1 TAB  &lt 2 SPACE  &kp LC(INT_HENKAN)      &kp BACKSPACE  &lt_to_layer_0 1 ENTER                             &mt RIGHT_CONTROL DEL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        NUM_ARROW {
            bindings = <
&kp KP_N6          &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0                              &kp LS(NUMBER_6)   &kp EXCLAMATION  &kp UP_ARROW      &kp QUESTION          &trans
&kp KP_NUMBER_1    &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &trans              &trans  &kp AT_SIGN        &kp LEFT_ARROW   &kp LEFT_BRACKET  &kp RIGHT_ARROW       &kp LS(EXCLAMATION)
&kp LS(SEMICOLON)  &kp KP_N1        &kp KP_N2        &kp KP_N3        &kp SLASH        &trans              &trans  &kp DOUBLE_QUOTES  &kp ASTERISK     &kp DOWN          &kp LEFT_PARENTHESIS  &kp LS(QUESTION)
&kp PLUS           &trans           &trans           &kp COLON        &kp MINUS        &kp UNDERSCORE      &trans  &trans                                                                      &trans
            >;
        };

        SIGN_FUNCTION {
            bindings = <
&kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(N5)  &kp PLUS       &trans                      &kp F9  &kp F10  &kp F11  &kp F12  &trans
&kp LS(COMMA)     &kp LS(PERIOD)    &kp PIPE    &kp LS(SLASH)  &trans  &trans      &trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans
&trans            &trans            &trans      &trans         &trans  &trans      &trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans
&trans            &trans            &trans      &trans         &trans  &trans      &trans  &trans                             &trans
            >;
        };

        layer_BT_SEL0-4 {
            bindings = <
&trans  &gresc        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &kp LC(V)  &mkp MB4        &msc SCRL_UP    &mkp MB5         &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp LC(C)  &mkp MB1        &mkp MB3        &mkp MB2         &kp LEFT_CONTROL
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp LC(V)  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                      &trans
            >;
        };

        NG_ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans                  &trans  &trans                   &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &kp LS(LG(LEFT_ARROW))  &trans  &kp LS(LG(RIGHT_ARROW))  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans                  &trans  &trans                   &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                                                           &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        NG_SCROLL {
            bindings = <
&kp KP_EQUAL     &kp LC(AT_SIGN)  &kp PIPE          &kp COMMA  &trans                            &kp AT_SIGN   &kp POUND    &kp CARET      &kp LEFT_PARENTHESIS   &kp UNDERSCORE
&kp KP_SLASH     &kp RS(AT_SIGN)  &kp GRAVE         &trans     &trans  &trans      &kp NUMBER_2  &kp AT        &kp DOLLAR   &kp AMPERSAND  &kp RIGHT_PARENTHESIS  &kp EQUAL
&kp LS(AT_SIGN)  &kp RIGHT_BRACE  &kp TILDE         &trans     &trans  &trans      &kp N2        &kp NUMBER_3  &kp PERCENT  &kp ASTERISK   &kp MINUS              &kp LEFT_BRACKET
&kp LA(AT_SIGN)  &kp BACKSLASH    &kp GREATER_THAN  &trans     &trans  &trans      &trans        &trans                                                           &kp RIGHT_BRACKET
            >;
        };
    };
};
